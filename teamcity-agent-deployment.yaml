#
#  Author: Hari Sekhon
#  Date: Thu Nov 26 13:35:31 2020 +0000
#
#  vim:ts=2:sts=2:sw=2:et
#
#  https://github.com/HariSekhon/kubernetes-templates
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help steer this or other code I publish
#
#  https://www.linkedin.com/in/HariSekhon
#

# ============================================================================ #
#                     T e a m C i t y   C I   -   A g e n t
# ============================================================================ #

# Deployment template for Kubernetes Cloud Profile to reference when creating automated agents
#
# It's  easier to use hostPath volume in deployment to grant access to /var/run/docker.sock for DOCKER_IN_DOCKER functionality

# See Also:
#
#   Adjacent teamcity-agent.yaml (statefulset)
#
#   https://github.com/HariSekhon/DevOps-Bash-tools/blob/master/setup/teamcity-docker-compose.yml


# Used as a template by TeamCity's Kubernetes Cloud Profile to auto-spin up and authorize agents

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-agent
  namespace: teamcity
  labels:
    app: teamcity-agent
    profile: cloud
spec:
  replicas: 0
  selector:
    matchLabels:
      app: teamcity-agent
      profile: cloud
  # TODO: change when we have more node pools
#  affinity:
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        - nodeSelectorTerms:
#          - matchExpressions:
#            - key: cloud.google.com/gke-preemptible
#              operator: DoesNotExist
  template:
    metadata:
      labels:
        app: teamcity-agent
        profile: cloud
    spec:
      securityContext:
        #runAsUser: 0
        fsGroup: 1000
      initContainers:
      - name: init
        image: busybox:latest
        command: ['/bin/chmod', '0666', '/var/run/docker.sock']
        volumeMounts:
          - name: var-run-docker-sock
            mountPath: /var/run/docker.sock
      containers:
      - name: teamcity-agent
        #image: jetbrains/teamcity-agent:2020.2.1
        # must use linux-sudo or run entire container as root to get DOCKER_IN_DOCKER to work
        image: jetbrains/teamcity-agent:2020.2.1-linux-sudo
        ports:
          - containerPort: 9090
        env:
          - name: AGENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DOCKER_IN_DOCKER
            value: start
          - name: SERVER_URL
            value: http://teamcity-server.teamcity.svc.cluster.local:8111
        readinessProbe:
          tcpSocket:
            port: 9090
          initialDelaySeconds: 30
          failureThreshold: 3
          periodSeconds: 5
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 9090
          initialDelaySeconds: 150  # takes ~ 1:20 - 2:30 for port to pass healthcheck
          failureThreshold: 10
          periodSeconds: 5
          timeoutSeconds: 5
        # leaving out system and work as they're just caches
        volumeMounts:
          - name: var-run-docker-sock
            mountPath: /var/run/docker.sock
      volumes:
        - name: var-run-docker-sock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
